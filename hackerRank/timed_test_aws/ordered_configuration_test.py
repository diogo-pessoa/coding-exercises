from unittest import TestCase

from hackerRank.timed_test_aws.ordered_configuration import ordered_configuration


class TestOrderedConfig(TestCase):
    """
    ## Happy path
configuration = "0002f7c22e7904|000176a3a4d214|000305d29f4a4b"

# Based on the `order` value, the expected output of this configuration string is:

## Output
[
"76a3a4d214", # 0001
"f7c22e7904", # 0002
"05d29f4a4b"  # 0003
]

## Invalid configuration
configuration = "0002f7c22e7904|000176a3a4d214|000205d29f4a4b"

# Configuration string contains two indices for "0002"

## Output
["Invalid configuration"]
    """

    def test_ordered_config(self):
        test_configuration = "0001LAJ5KBX9H8|0003UKURNK403F|0002MO6K1Z9WFA|0004OWRXZFMS"
        self.assertEqual(ordered_configuration(test_configuration),
                         ["LAJ5KBX9H8"
                             , "MO6K1Z9WFA"
                             , "UKURNK403F"
                             , "OWRXZFMS2C"])

    def test_ordered_config_2(self):
        self.assertEqual(ordered_configuration(
            "0008IMJFYKI19X|0077T9ZVIFFQSM|0033NUAD6IGK5Y|006513UTWKG7TI|0005W3GYCX8YYK|0092MBC53UFKIL|00719F7Z07UUJB|0019BN5FEWURCO|0034084JKB6ETU|0058LY3CIID80F|0059VZOUIIS3XA|0020QE4MB442KI|003178C5NDO0NI|0091YPCS8CADIK|0012PAC37XOUMX|0076D6LST7AJ4M|00835YTIBLWFLP|00529QNKE04H87|00886EVGH3WHPU|00895DW19V5WRO|00790617CIN7VD|00467FX58FE2I8|0023U9W2B6N4QM|0015XJI8XP0QYU|0075IU3MMIYDBM|0090K648KWAHBZ|0007TUOZLNHVS2|0040M86BG4SEQ5|0038K0E7XP7HV5|0061529NRD4LKC|0011JYG3QF4GOS|0062VMSCRY806C|0013VLZJ8DB8IT|0029PW70F8I2X5|00721L2HYS8RLO|00963H8SIMH2AF|0016CVBBFWPVDC|0070UU5BE9O35H|003563I1OVBWZD|00825W3I2HGASA|0067KUW94WT665|0051QPTSPPOGBI|0080YIXJNNF0XQ|0009CQAZ9Q2X8H|0003UZX01ZTYT1|00224TLTFDPEDB|0024Y77UUTPFNW|0021HAYI4H406Y|0078U1NK1JUTGA|00374ZYV892Q0S|0028SGDRVYIABV|0039UUA5PYJPMV|0001KPUVGYN9AM|0093HTJKCOQHF3|0027GSVQ16W5X1|00268161PEIE8V|0030S61697DV4Q|0002C15MNGQ4AN|0094ODLHP31Z36|00569C6UQKW9Q4|0064VH020PDL3G|00852YTB1EFW0Q|0045KTTXTTEX8N|0032MA06JJVAUI|0004Y6L4UR2VSW|0063G3DIZ00X0I|0097EU79SEO8SC|0054KUTJ183O8K|0086AYY81NHT5M|0069PLCVDNBX4S|0018P1LIFXN7RU|0073KP6JQWNH0A|00367Z16CEASDF|0049W7R0P73TMB|0041GSHBPOTETL|0084VAM08BZBD4|0048GHWSX5UBL3|0017491UR8AYPE|0087XB0G835566|0047D1QDF3SVYL|0010K2YFNFSXSZ|0055ERGAA94TW8|0057969YPNDA2I|0043FUPZCF9XZB|0074L2AILS3NHS|0014GVSEPB5B3H|0068LLOXLOADIT|0095JSA7TLKAGB|0044THNJZAYA3P|0066SBF1LVD3XC|0098L13ZZ1PM6P|0081J9N9SNZ4ST|0053XZD6LZ8UDR|0042IX5QY9K60G|0060AWZZIL7PZF|0050DQGNI7VKFE|00068QPES5V1AV|0025JTIXBVD74R"),
            ["KPUVGYN9AM", "C15MNGQ4AN", "NUAD6IGK5Y", "Y6L4UR2VSW", "W3GYCX8YYK", "QE4MB442KI",
             "PAC37XOUMX", "BN5FEWURCO", "VLZJ8DB8IT", "PW70F8I2X5", "U9W2B6N4QM", "HAYI4H406Y",
             "QPTSPPOGBI", "YIXJNNF0XQ", "TUOZLNHVS2", "CQAZ9Q2X8H", "UZX01ZTYT1", "MA06JJVAUI"])

    def test_invalid_config(self):
        self.assertEqual(ordered_configuration("0002f7c22e7904|000176a3a4d214|000205d29f4a4b"),
                         ["Invalid configuration"])

    def test_invalid_config_2(self):
        self.assertEqual(ordered_configuration("0002f7c22e7904|000176a3a4d214|000205d29f4a4b"),
                         ["Invalid configuration"])

    def test_ordered_config(self):
        self.assertEqual(ordered_configuration("0002f7c22e7904|000176a3a4d214|000305d29f4a4b"),
                         ["76a3a4d214", "f7c22e7904", "05d29f4a4b"])

    def test_ordered_config_2(self):
        self.assertEqual(ordered_configuration("0002f7c22e7904|000176a3a4d214|000205d29f4a4b"),
                         ["Invalid configuration"])
